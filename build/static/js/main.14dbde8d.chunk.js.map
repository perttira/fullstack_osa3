{"version":3,"sources":["services/notes.js","components/Kurssi.js","components/Henkilot.js","App.js","index.js"],"names":["notes","getAll","axios","get","create","newObject","post","update","id","put","concat","remove","delete","Kurssit","React","Component","_ref","kurssinNimi","nimi","tehtavia","tehtavatYhteensa","react_default","a","createElement","class","Henkilot","name","number","onClick","console","log","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","nameFound","noteObject","state","newName","newNumber","persons","forEach","element","window","confirm","noteService","then","response","setState","filter","catch","error","data","setTimeout","deletePerson","elem","handleChanges","target","value","toggleVisible","showAll","filtteroi","_this2","mapattuPersons","map","person","_this3","startsWith","App_Rajaa","onChange","App_Notification","message","onSubmit","type","components_Henkilot","key","Rajaa","Notification","className","ReactDOM","render","src_App","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.14dbde8d.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  newObject.id = ''\n  //console.log(\"${baseUrl + persons}/${id}\", `${baseUrl + \"persons\"}/${id}`)\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\n/*const replace = (id) => {\n  return axios.put(`${baseUrl + \"persons\"}/${id}`)\n}\n*/\n\nexport default { getAll, create, update, remove }","import React from 'react'\nimport Otsikko from './Otsikko';\n\nclass Kurssi extends React.Component {\n\n\n  render() {\n\n    return (\n      \n      <div>\n        <Kurssit kurssinNimi = {this.props.kurssinNimi} nimi={this.props.nimi} tehtavia = {this.props.tehtavia} tehtavatYhteensa = {this.props.tehtavatYhteensa} />\n      </div>\n\n    )\n  }\n}\n\nconst Kurssit = ({ kurssinNimi, nimi, tehtavia, tehtavatYhteensa }) => (\n  \n  <div>\n    <span>{nimi}</span>\n    <span class=\"tehtavat\">{tehtavia}</span>\n  </div>\n)\n\nexport default Kurssi\n\n","import React from 'react'\n\nconst Henkilot = ({ name, id, number, onClick }) => {\n  console.log(\"Henkilot id\", id)\n\n  return (\n    <div>\n      <li>{name} {number} <button onClick={onClick}>Poista henkilö</button></li> \n    </div>\n  )\n}\n\nexport default Henkilot","import React from 'react'\nimport axios from 'axios'\nimport noteService from './services/notes'\nimport Kurssi from './components/Kurssi'\nimport Otsikko from './components/Otsikko'\nimport Yhteensa from './components/Yhteensa'\nimport Henkilot from './components/Henkilot'\nimport './style.css';\n\n/*\n\n//      OSA 2 2.1 kurssien sisältö\n//      OSA 2 2.2 tehtävien määrä\n//      OSA 2 2.3 reduce\n\n\nconst App = () => {\n  \n  const kurssi = {\n    nimi: 'Half Stack -sovelluskehitys',\n\n    osat: [\n      {\n        nimi: 'Reactin perusteet',\n        tehtavia: 10,\n        id: 1\n      },\n      {\n        nimi: 'Tiedonvälitys propseilla',\n        tehtavia: 7,\n        id: 2\n      },\n      {\n        nimi: 'Komponenttien tila',\n        tehtavia: 14,\n        id: 3\n      }\n    ],\n  }\n\n  let yhteensa = kurssi.osat.reduce(function(sum, tehtavat){\n    return sum + tehtavat.tehtavia\n  },0)\n\nconsole.log(\"kurssi.osat APP:issa :\", kurssi.osat)\nconsole.log(\"kurssi.osat APP:issa :\", yhteensa)\n\n\n  return (\n    <div>\n      {<Otsikko kurssinNimi={kurssi.nimi} />}\n      {kurssi.osat.map(kurssi_map =><Kurssi key={kurssi_map.id} id={kurssi_map.id} tehtavia={kurssi_map.tehtavia} nimi={kurssi_map.nimi} />)}\n      <div>\n        <Yhteensa yhteensa={yhteensa} />\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n\n*/\n\n/*\n\n//      OSA 2 2.4 monta kurssia & OSA 2.5 erillinen moduuli\n\n\n\nconst App = () => {\n\n  const kurssit = [\n    {\n      nimi: 'Half Stack -sovelluskehitys',\n      id: 1,\n      osat: [\n        {\n          nimi: 'Reactin perusteet',\n          tehtavia: 10,\n          id: 1\n        },\n        {\n          nimi: 'Tiedonvälitys propseilla',\n          tehtavia: 7,\n          id: 2\n        },\n        {\n          nimi: 'Komponenttien tila',\n          tehtavia: 14, \n          id: 3\n        }\n      ]\n    },\n    {\n      nimi: 'Node.js',\n      id: 2,\n      osat: [\n        {\n          nimi: 'Routing',\n          tehtavia: 3,\n          id: 1\n        },\n        {\n          nimi: 'Middlewaret',\n          tehtavia: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\nconst tulostaKurssit = () => {\n\n  let palautettava = []\n  let pushattava \n\n  kurssit.map(function(kurssi_map){ \n\n    palautettava.push(<h1><Otsikko kurssinNimi = {kurssi_map.nimi}/></h1>)\n    palautettava.push(kurssi_map.osat.map(osat=><Kurssi nimi = {osat.nimi} id = {osat.id} tehtavia = {osat.tehtavia}/>))\n    \n    let kurssitTaulukossa = kurssi_map.osat.map(function(osat){\n      return osat.tehtavia\n    })\n    \n    pushattava = kurssitTaulukossa.reduce(function(sum, order){      \n      return sum + order\n    },0)\n\n    palautettava.push(<Yhteensa yhteensa = {pushattava}/>)\n  \n  })\n  return palautettava\n}\n\n  return (\n    <div>\n      {tulostaKurssit()}\n    </div>\n  )\n}\n\nexport default App;\n\n*/\n\n\n//    OSA 2 2.6 puhelinluettelo osa 1 & OSA 2.7 puhelinluettelo osa 2 &\n//    2.8 puhelinluettelo osa 3 & 2.9* puhelinluettelo osa 4\n//    & 2.10 puhelinluettelo osa 5 & 2.11 osa 6 & 2.14 puhelinluettelo osa 7\n//    & 2.15 puhelinluettelo osa 8 & 2.16 puhelinluettelo osa 9 && 2.17* puhelinluettelo osa 10\n//    2.18 puhelinluettelo osa 11 && 2.19* puhelinluettelo osa 12\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      filtteroi: [],\n      newName: '',\n      newNumber: '',\n      filter: '',\n      error: null\n    }\n  }\n  \n  \ncomponentDidMount() {\n\n  noteService\n    .getAll()\n    .then(response => {\n      console.log(\"axios get response\", response)\n      let mapattuPersons = response.data.map((person) => person)\n      this.setState({ persons: mapattuPersons })\n      this.setState({filtteroi: mapattuPersons })\n    })\n    \n    .catch(error => {\n      this.setState({\n        error: `Tietokantaan ei saatu yhteyttä 404 NOT FOUND`,\n      })\n      setTimeout(() => {\n        this.setState({error: null})\n      }, 5000)\n    })\n\n}\n\n       \naddPerson = (event) => {\n\n  event.preventDefault()\n  \n  let nameFound = false\n  \n  const noteObject = {\n    name: this.state.newName,\n    number: this.state.newNumber,\n  }\n\n  // käydään persons taulukko läpi ja katsotaan löytyykö samannimistä henkilöä\n  this.state.persons.forEach(element => {\n    if (element.name === noteObject.name) {\n      nameFound = true\n      noteObject.id = element.id\n    }\n  })\n\n  // tarkistetaan löytyikö samannimistä päivitettävää henkilöä ja onko käyttäjä painanut OK\n  if (nameFound && window.confirm(\"Henkilö on jo olemassa. Haluatko päivittää henkilön tiedot?\")) {\n \n    noteService\n    .update(noteObject.id ,noteObject)\n    .then(response => {\n      this.setState( {newName: '', newNumber: ''})\n      //Etsitään päivitettävä henkilö persons taulukosta ja päivitetään sen tiedot\n      this.state.persons.forEach(element => {\n        if (element.name === noteObject.name) {\n          element.number = noteObject.number\n        }\n      })        \n      //päivitetään selaimen näkymä päivittämällä filter\n      this.setState({filter: ''})\n    })\n\n    .catch(error => {\n      this.setState({\n        error: `Päivitettävää henkilöä ei löytynyt enää tietokannasta 404 NOT FOUND. Lisätään henkilö uudestaan tietokantaan.`,\n      })\n      // Päivitettävää henkilöä ei löytynyt, joten luodaan se tietokantaan\n      noteService\n      .create(noteObject)\n      .then(response => {\n        this.setState( {newName: '', newNumber: ''})\n        console.log(\"axios post response create\", response)\n\n        const noteObject = {\n          name: response.data.name,\n          number: response.data.number,\n          id: response.data.id\n        }\n\n        this.state.persons.forEach(element => {\n          if (element.name === noteObject.name) {\n            \n            element.number = noteObject.number\n            \n          }\n        })\n        //this.setState ( {persons: this.state.persons.concat(noteObject)} )\n        \n      })\n      \n      .catch(error => {\n        this.setState({\n          error: `Jotain meni pieleen. Henkilötietoa ei pystytty luomaan.`,\n        })\n        setTimeout(() => {\n          this.setState({error: null})\n        }, 5000)\n      })\n      \n      setTimeout(() => {\n        this.setState({error: null})\n      }, 5000)\n    \n    })\n\n  }else{\n\n     noteService\n      .create(noteObject)\n      .then(response => {\n        this.setState( {newName: '', newNumber: ''})\n        console.log(\"axios post response create\", response)\n\n        const noteObject = {\n          name: response.data.name,\n          number: response.data.number,\n          id: response.data.id\n        }\n\n        this.setState ( {persons: this.state.persons.concat(noteObject)} )\n      })\n      \n      .catch(error => {\n        this.setState({\n          error: `Jotain meni pieleen. Henkilötietoa ei luotu.`,\n        })\n        setTimeout(() => {\n          this.setState({error: null})\n        }, 5000)\n      })\n\n  }\n\n}\n\n\ndeletePerson = (id) => {\n  \n  if (window.confirm(\"Do you really want to remove this person?\")) { \n    noteService\n      .remove(id)\n      .then(response => {\n        // Tekee uuden taulukon joka ei sisällä id:n omaavaa henkilöä\n        console.log(\"deletePerson response\", response)\n        this.setState({persons: this.state.persons.filter(elem => elem.id !== id)})\n      })\n\n      .catch(error => {\n        this.setState({\n          error: `Henkilöä ei löytynyt tietokannasta`,\n        })\n        setTimeout(() => {\n          this.setState({error: null})\n        }, 5000)\n      })\n\n  }\n\n}\n\n\nhandleChanges = (event) => {\n\n  if(event.target.name === \"newName\"){\n    this.setState({ newName: event.target.value })\n  }else if (event.target.name === \"newNumber\") {\n    this.setState({ newNumber: event.target.value })\n  }else{\n    this.setState({ filter: event.target.value })\n  }\n\n}\n\n\ntoggleVisible = () => {\n  this.setState({showAll: !this.state.showAll})\n}\n\n\nrender() {\n    //console.log(\"props\", this.props) kissa\n    const filtteroi = this.state.persons.filter(person => person.name.startsWith(this.state.filter))\n  \n    return (\n      <div>\n        <h1>Puhelinluettelo</h1>\n        <label>rajaa näytettäviä </label>\n          <Rajaa name=\"filter\" value={this.state.filter} onChange={this.handleChanges} persons={this.state.persons}/>\n        <h1>Lisää uusi</h1>\n          <Notification message={this.state.error}/>\n        <form onSubmit={this.addPerson}>\n          <label>nimi: </label><input name=\"newName\" value={this.state.newName} \n            onChange={this.handleChanges}/>\n            <br/>\n          <label>numero: </label><input name=\"newNumber\" value={this.state.newNumber} \n            onChange={this.handleChanges}/>\n            <br/>\n          <button type=\"submit\">tallenna</button>\n        </form>\n          <h1>Numerot</h1>\n          <ul>\n            {filtteroi.map(person => <Henkilot key={person.id} id={person.id} name={person.name} number={person.number} onClick={() => this.deletePerson(person.id)}/>)}\n          </ul>\n      </div>\n    )\n  }\n}\n\nconst Rajaa = (props) => {\n  return (\n    <div>\n      <input name={props.name} value={props.value}  onChange={props.onChange}/>\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML on helppoa',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Selain pystyy suorittamaan vain javascriptiä',\n    date: '2017-12-10T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'HTTP-protokollan tärkeimmät metodit ovat GET ja POST',\n    date: '2017-12-10T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}